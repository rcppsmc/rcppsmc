2021-12-18  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.6

2021-11-25  Dirk Eddelbuettel  <edd@debian.org>

	* src/LinReg.cpp: Remove 'using namespace std;' for g++-11 builds
	* src/LinReg_LA.cpp: Idem
	* src/LinReg_LA_adapt.cpp: Idem

2021-10-10  Dirk Eddelbuettel  <edd@debian.org>

	* README.md: Update JSS url to doi form per JSS request
	* man/pfLineartBS.Rd: Idem

2021-09-09  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.5

2021-09-08  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Roll minor version

	* inst/include/conditionalSampler.h: Use std::pow

	* README.md: Belatedly add Ilya

2021-09-01  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.4

2021-08-15  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: add support for printing of
	conditional sampler class to print particle value, log-weight and
	normalized output with possibility to round values before prinint

2021-08-14  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: override redundant methods
	derived from base class sampler to throw an exception (error) when
	using them to prohibit the user from accessing these unsupported
	facilities
	* inst/include/conditionalSampler.h: remove all calls to methods of
	unsupported adaptation and MCMC-move facilities and adjust
	histel.Set() calls to not use parameters related to adaptation or
	MCMC-moves
	* inst/include/history.h: overload histel.Set() s.th. setting of data
	members that are related to adaptation or MCMC-move facilities is
	prohibited
	* inst/include/smc-exception.h: add exception macros for exceptions
	related to calls of redundant methods (see first bullet point)

2021-08-11  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: resolve nondependent name
	look-up in derived conditionalSampler class via using-statements
	instead of explicit naming to make code cleaner and facilitate
	readability (implicit name look- up via this-> pointer remains where
	necessary)

2021-08-09  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: small Bugfix related to
	stratified and systematic conditional resampling

2021-08-07  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: improve sampling step from
	discrete uniform distribution + some minor fixes

2021-08-04  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: add blueprint version of
	conditional residual resampling: currently WIP to be finished later

2021-08-04  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: add preliminary implementation
	of multinomial, stratified, and systematic conditional resampling

2021-08-03  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/conditionalSampler.h: copy conditional sampler content
	from inst/include/sampler.h to new file
	inst/include/conditionalSampler.handled
	* inst/include/sampler.h: delete content of conditional Sampler from this
	file
	* inst/include/RcppSMC.h: add new header file conditionalSampler.h to
	list of all headers

2021-08-01  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/sampler.h: add random permutation as a preliminary
	quick fix of current facilities to support conditional multinomial
	resampling

2021-07-28  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/moveset.h: add virtual functions for setting
	conditional particle coordinate and re-weighting of that; update
	construct for moveset
	* inst/include/sampler.h: add container and getters/setters for reference
	trajectory, conditional multinomial resampling and and some minor bufixes

2021-07-23  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	[brief summary of commits 2f30971, a40bf66, 8abdc6e, e631e51, e2a10ff]
	* inst/include/sampler.h: add facilities for conditional SMC
	* inst/include/moveset.h: add user specified weighting facilities for
	conditional coordinates
	* inst/include/population.h: add function to set just one particle log
	weight

2021-06-23  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* inst/include/history.h: add facilities for tracking of ancestral lines
	(mostly additions to the historyelement class)
	* inst/include/sampler.h: add computation of ancestral lines making us of
	updated facilities from the historyelement class; conditional switch
	allowing for an additional HistoryType::AL

2021-05-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (URL, BugReports): Added

2021-05-20  Dirk Eddelbuettel  <edd@debian.org>

	* src/RcppExports.cpp: Updated
	* R/RcppExports.R: Idem

2021-05-20  Ilya Zarubin  <ilya.a.zarub@gmail.com>

	* src/nonLinPMMH.cpp: add user output (mcmc diagnostics) and return
	acceptance rate for this example
	* R/nonLinPMMH.R: adjust call to the nonLinPMMH_impl() function
	accordingly

2021-02-10  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.3

2021-02-10  Leah F. South  <leah.south@hdr.qut.edu.au>

	* .Rbuildignore: .github/ added.

2021-02-09  Leah F. South  <leah.south@hdr.qut.edu.au>

	[ Changes below made much earlier and merged now]
	* inst/include/moveset.h: Switching to inheritance for the
	moveset while maintaining backwards compatibility (except
	for the choice of multiple moves).
	* inst/include/sampler.h: Idem.

	* inst/include/blockpfgaussianopt.h: Idem.
	* inst/include/LinReg.h: Idem.
	* inst/include/LinReg_LA.h: Idem.
	* inst/include/LinReg_LA_adapt.h: Idem.
	* inst/include/nonLinPMMH.h: Idem.
	* inst/include/pflineart.h: Idem.
	* inst/include/pfnonlinbs.h: Idem.

	* src/blockpfgaussianopt.cpp: Idem.
	* src/LinReg.cpp: Idem.
	* src/LinReg_LA.cpp: Idem.
	* src/LinReg_LA_adapt.cpp: Idem.
	* src/nonLinPMMH.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

2021-01-12  Dirk Eddelbuettel  <edd@debian.org>

    * .github/workflows/ci.yaml: Add CI runner using r-ci
	* README.md: Add new badge

2020-08-29  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.2

	* R/bspfGaussianOptimal.R (blockpfGaussianOpt): Use return() as
	requested by CRAN, plus minor whitespace and assignment edits
	* inst/include/pflineart.h: Add trailing newline
	* man/LinReg.Rd: Remove non-standard \concept{}
	* man/pflineartBS.Rd: Use https in URLs
	* inst/NEWS.Rd: Idem

2020-07-19  Dirk Eddelbuettel  <edd@debian.org>

	* README.md: Add 'last commit' badge

	* .travis.yml: Update to 'bionic' and R 4.0.*

2018-09-02  Dirk Eddelbuettel  <edd@debian.org>

	* .travis.yml: Minor update to commented-out PPA for R 3.5

2018-03-18  Leah F. South  <leah.south@hdr.qut.edu.au>

	* inst/include/moveset.h: Changed the assignment overloader to use
	a const reference.
	* inst/include/sampler.h: Added a missing return to the sampler
	assignment overloading function.

2018-03-18  Adam M. Johansen  <adam.johansen@gmail.com>

	* inst/NEWS.Rd: Duplicate entry removed.
	* .editorconfig: Added.
	* .Rbuildignore: .editorconfig added.

2018-03-18  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.1

	* inst/NEWS.Rd: Updated

2018-03-17  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/history.h: Use std::pow
	* inst/include/sampler.h: Idem
	* src/LinReg.cpp: Idem
	* src/LinReg_LA_adapt.cpp: Idem
	* src/nonLinPMMH.cpp: Idem
	* src/pflineart.cpp: Idem
	* src/pfnonlinbs.cpp: Idem

	* DESCRIPTION (Version, Date): New minor version

2018-03-16  Adam M. Johansen  <adam.johansen@gmail.com>

	* README.md: Added link to rcppsmc google group.

2018-03-13  Tiberiu Lepadatu  <tiberiulepadatu14@gmail.com>

	* inst/include/sampler.h: Improve the history getters so we can have
	a more natural interface to work with.
	* src/LinReg_LA_adapt.cpp: Replace the old methods.

2018-03-03  Adam M. Johansen  <adam.johansen@gmail.com>

	* src/pfnonlinbs.cpp (pfNonlinBS_impl): Bugfix for SD estimation.
	(nonlinbs): Changed initial variance for consistency with simulator.

2018-01-30  Martin Lysys  <mlysy@uwaterloo.ca>

	* inst/include/sampler.h: Corrected sampler copy ctor/assignment

2018-01-26  Dirk Eddelbuettel  <edd@debian.org>

	* R/plugin.R (inlineCxxPlugin): Plugin support for Rcpp Attributes
	and inline
	* inst/inclide/RcppSMC.h: Header for plugin use

2018-01-24  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): New minor version

	* README.md: Correct link for Travis CI badge

2018-01-23  Martin Lysys  <mlysy@uwaterloo.ca>

	* inst/include/history.h: Converted for header-only library use
	* inst/include/populattion.h: Ditto
	* inst/include/sampler.h: Ditto
	* inst/include/smc-exception.h: Ditto
	* inst/include/statisModelAdapt.h: Ditto
	* deprecated/*cpp: Moved several now replaced cppp files

2017-11-27  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): New minor version

2017-11-14  Brian Ni  <binxiangni@gmail.com>

	* inst/include/sampler.h: Add copy constructor and assignment
	overloading

2017-08-28  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.2.0

2017-08-11  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/adaptMethods.h: Changing the name (from algParams.h)
	and removing the parameter object so it is not a member of the class.
	Instead, it is passed by reference to the adaptation functions.
	* inst/include/moveset.h: Passing a reference to the algorithm
	parameters to all functions.
	* inst/include/sampler.h: Adding the parameter object as a member of
	this class and updating accordingly. Passing the algorithm parameters
	by reference to the adaptation and initialisation/move/MCMC
	functions.  parameters to all functions.

	* inst/include/LinReg_LA_adapt.h: Switching to a pointer for the
	sampler object and passing the parameter objects by reference to the
	adaptation and move functions.
	* src/LinReg_LA_adapt.cpp:  Idem. Also adding the adaptation object
	type to the template arguments for moveset.

	* inst/include/blockpfgaussianopt.h: Adding params to the moveset
	function arguments with an empty class as the type.
	* inst/include/LinReg.h: Idem.
	* inst/include/LinReg_LA.h: Idem.
	* inst/include/nonLinPMMH.h: Idem.
	* inst/include/pflineart.h: Idem.
	* inst/include/pfnonlinbs.h: Idem.

	* src/blockpfgaussianopt.cpp: Adding params to the moveset
	function arguments and template arguments for sampler and moveset.
	Using an empty class as the type.
	* src/LinReg.cpp: Idem.
	* src/LinReg_LA.cpp: Idem.
	* src/nonLinPMMH.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

2017-08-09  Leah South  <leah.south@hdr.qut.edu.au>

	* R/LinReg.R: Accessing radiata data through RcppSMC:: namespace rather
	than declaring it global.
	* R/LinRegLA.R: Idem.
	* R/LinRegLA_adapt.R: Idem.

2017-08-08  Leah South  <leah.south@hdr.qut.edu.au>

	* src/staticModelAdapt.cpp: Adding missing absolute value
	to calculations of MCMC repeats.

	* inst/include/history.h: Adding MCMC repeats to history.
	* inst/include/sampler.h: Idem.

	* inst/NEWS: Updating with recent issue tickets and pull requests.

	* R/LinRegLA_adapt.R: An adaptive version of LinRegLA.
	* src/LinReg_LA_adapt.cpp: Idem.
	* inst/include/LinReg_LA_adapt.h: Idem.
	* man/LinReg.Rd: Documenting the new function.

	* NAMESPACE: Adding the new function to the namespace.

	* src/RcppExports.cpp: Regenerated.
	* R/RcppExports.R: Idem.

2017-08-07  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/staticModelAdapt.h: A class for commonly used
	parameters and methods to adapt them in SMC for static
	Bayesian models.
	* src/staticModelAdapt.cpp: The function definitions.
	* inst/include/sampler.h: Adding an include statement for
	staticModelAdapt.

2017-08-06  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/algParam.h: A base class to contain
	additional algorithm parameters and virtual functions to
	adapt them.
	* inst/include/moveset.h: Changing the MCMC step to perform
	multiple iterations within the library rather than on user end.
	* inst/include/sampler.h: Adding an additional template
	parameter for additional parameters and allowing for
	optional adaptation at multiple points.

	* src/LinReg.cpp: Boolean return for MCMC function and
	setting MCMC repeats separately.
	* src/LinReg.cpp: Idem.
	* inst/include/LinReg.h: Idem.
	* inst/include/LinReg_LA.h: Idem.

	* src/RcppExports.cpp: Regenerated.
	* R/RcppExports.R: Idem.

2017-08-04  Adam M. Johansen  <adam.johansen@gmail.com>

	* R/LinRegLA.R: Suppressing redundant call to data().
	* R/LinReg.R: Idem.

2017-08-04  Leah South  <leah.south@hdr.qut.edu.au>

	* R/LinReg.R: Silencing R CMD check --as-cran by not loading
	data(radiata) into the global workspace.
	* R/LinRegLA.R: Idem.
	* inst/NEWS: Adding a line for each of the recent major changes.

2017-08-03  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Roll minor version

	* src/RcppExports.cpp: Regenerated
	* R/RcppExports.R: Ditto

2017-08-03  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/sampler.h: Initialising dlogNCPath to 0.
	* src/nonLinPMMH.cpp: A new example based on using PMMH for a
	non-linear state space model
	* inst/include/nonLinPMMH.h: Idem.
	* R/nonLinPMMH.R: Idem.
	* man/nonLinPMMH.Rd: Documenting the new example.
	* NAMESPACE: Adding the new function nonLinPMMH.

	* R/simNonlin.R: Generalising the function so that it can be
	used for both nonLinPMMH and pfNonlinBS.
	* man/simNonlin.Rd: Documenting the function separately because
	it is used in multiple examples.
	* man/pfNonlinBS.Rd: Documenting simNonlin separately.

2017-08-02  Dirk Eddelbuettel  <edd@debian.org>

	* R/LinReg.R: Silence R CMD check --as-cran about data(radiate)
	* R/LinRegLA.R: Ditto
	* NAMESPACE: Declare two more imports from base packages

2017-08-01  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/LinReg.h: Data annealing SMC approach to a linear
	regression problem.
	* src/LinReg.cpp: Idem.
	* R/LinReg.R: Idem.

	* inst/include/LinReg_LA.h: Likelihood annealing SMC approach to a
	linear regression problem.
	* src/LinReg_LA.cpp: Idem.
	* R/LinRegLA.R: Idem.

	* man/LinReg.Rd: Documentation for the linear regression examples.

	* NAMESPACE: Adding LinReg and LinRegLA to the exports.

	* DESCRIPTION: Setting LazyData to true.
	* data/radiata.rda: Adding the linear regression example data.
	* inst/rawdata/radiata-data.csv: Adding a raw version of the
	linear regression example data.
	* man/radiata.Rd: Documentation for the dataset

2017-07-27  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/sampler.h: Adding log normalising constant
	estimation capabilities (standard SMC estimator and additional
	path sampling estimators).  Moving ResampleType and HistoryType
	into namespaces. Taking stableLogSumWeights out.
	* inst/include/population.h: Moving stableLogSumWeights
	declaration here.
	* inst/include/history.h: Changing template parameter from
	Population to Space to make it easier for users to write path
	sampling integrands. Adding a function which will be used in the
	second order trapezoidal integration correction. Using more stable
	calculations of the log sum of weights.

	* src/helper.cpp: Adding a source file for untemplated functions
	of general interest.

	* src/pflineart.cpp: Updating use of ResampleType and HistoryType
	* src/pfnonlinbs.cpp: Updating use of ResampleType and HistoryType
	* src/blockpfgaussianopt.cpp: Updating use of ResampleType and
	HistoryType and getting log normalising constant ratio estimate.
	* man/blockpfGaussianOpt.Rd: Adding log evidence normalising
	constant ratio to the list of returns objects.

2017-07-26  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/sampler.h: Removing the helper function
	Multinomial.

2017-07-25  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/rngR.h: Removed (no longer needed with Rcpp
	attributes)

	* inst/include/smctc.h: Removing use of rngR
	* inst/include/blockpfgaussianopt.h: Idem.
	* inst/include/pflineart.h: Idem.
	* inst/include/pfnonlinbs.h: Idem.
	* src/blockpfgaussianopt.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

	* inst/include/moveset.h: Removing the use of rngR and correcting
	the move selector function to work on the particle level.
	* inst/include/sampler.h: Removing the use of rngR and replacing
	some C style casts with static_cast.
	* inst/include/history.h: Including RcppArmadillo header

2017-07-24  Leah South  <leah.south@hdr.qut.edu.au>

	* inst/include/particle.h: Removed (no longer needed now with
	population.h).

	* src/init.c: Removed due to use of Rcpp attributes.
	* src/RcppExports.cpp: Initial creation with Rcpp attributes.
	* R/RcppExports.R: Initial creation with Rcpp attributes.

	* inst/include/sampler.h: Adding a function GetParticleWeight()
	and updating copyright header.

	* inst/include/blockpfgaussianopt.h: Making full use of the
	example namespace and updating copyright header.
	* inst/include/pflineart.h: Creating a namespace for this example,
	changing the data type to armadillo vectors and updating copyright
	header.
	* inst/include/pfnonlinbs.h: Updating copyright header.

	* src/blockpfgaussianopt.cpp: Using Rcpp attributes, making use of
	the example namespace, using armadillo vectors and updating
	copyright header.

	* src/bspfGaussianOptimal.R: Switching to Rcpp attributes.
	* src/pfLineartBS.R: Idem.
	* src/pfNonlinBS.R: Idem.

	* inst/include/history.h: Updating copyright header.
	* inst/include/moveset.h: Idem.
	* inst/include/population.h: Idem.
	* inst/include/rngR.h: Idem.
	* inst/include/sampler.h: Idem.
	* inst/include/smc-exception.h: Idem.
	* inst/include/smctc.h: Idem.

2017-07-21  Leah South  <leah.south@hdr.qut.edu.au>

	* DESCRIPTION: Adding RcppArmadillo to LinkingTo and updating
	authors

	* src/Makevars: Updating for Armadillo use

	* inst/include/particle.h renamed to population.h and changing
	from a particle level object to a population level object

	* inst/include/history.h: updated to reflect population level
	object, some parts moved to sampler.h

	* inst/include/moveset.h: updated to reflect population level
	object

	* inst/include/sampler.h:
	- Updated to reflect population level object
	- Changing structures used internally for resampling to arma::vec
	- Adding the missing resample and MCMC steps to the Initialise function
	- Updating history usage and storing at the end of the iterations

	* inst/include/rngR.h (Multinomial): Input argument arma::vec for
	weights

	* inst/include/blockpfgaussianopt.h: Updated initialisation and
	move functions to reflect above changes.
	* inst/include/pflineart.h: Idem.
	* inst/include/pfnonlinbs.h: Idem.
	* src/blockpfgaussianopt.cpp: Idem.
	* src/pflineart.cpp: Idem.
	* src/pfnonlinbs.cpp: Idem.

	* TODO: Updated to include more detailed plans

2017-07-20  Dirk Eddelbuettel  <edd@debian.org>

	* src/blockpfgaussianopt.cpp (blockpfGaussianOpt_impl): For symbol
	registration, make C++ function name distinct from R function name
	* src/pflineart.cpp (pfLineartBS_impl): Idem
	* src/pfnonlinbs.cpp (pfNonlinBS_impl): Idem
	* src/init.c: Updated accordingly

	* R/bspfGaussianOptimal.R (blockpfGaussianOpt): Updated .Call
	* R/pfLineartBS.R (onlinePlot): Idem
	* R/pfNonlinBS.R (pfNonlinBS): Idem

2017-03-04  Dirk Eddelbuettel  <edd@debian.org>

	* NAMESPACE: Use .registration=TRUE on useDynLib

2017-03-03  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Date, Version): Version 0.1.5
	(Title): Use 'Title Case'
	(Description): No 'This package'

	* inst/NEWS.Rd: Use \CRANpkg{} macro

	* NAMESPACE: Declare additional Imports

	* README.md: Switch to canonical URLs, update JSS paper URL

	* src/init.c (R_init_RcppSMC): Call R_registerRoutines()
	and R_useDynamicSymbols()

	* R/pfNonlinBS.R (pfNonlinBS): Use PACKAGE= with .Call()
	* R/bspfGaussianOptimal.R (blockpfGaussianOpt): Idem
	* R/pfLineartBS.R (onlinePlot): Idem

	* .travis.yml: Switch to using run.sh for Travis CI

2014-05-02  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.4

	* inst/include/sampler.h: Also delete pParticles in destructor

2014-05-01  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.3

2014-05-01  Adam M. Johansen  <a.m.johansen@warwick.ac.uk>

	* src/pflineart.cpp: Bug fix reduces number of calls of
	Sampler.iterate() by 1; resolves memory overrun issue.

2014-02-06  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.2

	* DESCRIPTION: Now Imports: rather than Depends: on Rcpp (and
	methods), also require Rcpp (>= 0.11.0) for new no-linking build

	* NAMESCPAE: Add an importFrom(Rcpp, evalCpp) for Rcpp 0.11.0

	* src/Makevars (PKG_CPPFLAGS): No longer need PKG_LIBS for Rcpp

2013-12-14  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1.3 as minor dev version, next release as 0.1.2

	* .travis.yml: Added for Github / Travis support
	* .gitignore: Added for git support
	* .Rbuildignore: Exclude a few more development files from tarball

	* R/pfLineartBS.R (onlinePlot): Replace x11() by dev.new()

2013-02-11  Adam Johansen  <a.m.johansen@warwick.ac.uk>

	* DESCRIPTION: Version 0.1.1.2 as minor dev version, next release as 0.1.2

	* R/pfNonlinBS.R: Automatically simulate data, and warn, if none supplied.

2013-02-10  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1.1 as minor dev version, next release as 0.1.2

	* R/pfNonlinBS.R: Corrected test for missing data in call

2012-05-14  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.1

2012-05-13  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/sampler.h: Use explicit std::max() for g++-4.7

2012-03-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.1.0

	* src/rng.cpp: Moved old GSL-based RNG code to deprecated/
	* inst/include/rng.h: Idem
	* man/pfLineartBS.Rd: Callback-to-R example only if interactive()

2012-03-21  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* R/pfLineartBS.R Added function to dynamically set the range of
	the online plot.

2012-03-19  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* R/simGaussian.R Added data-simulating function
	* R/simLineart.R Idem
	* R/simNonlin.R Idem
	* man/blockpfGaussianOpt.Rd Added simulator doc and example usage.
	* man/pfLineartBS.Rd Idem
	* man/pfNonlinBS.Rd Idem
	* NAMESPACE Added data-simulating functions to namespace

2012-03-18  Dirk Eddelbuettel  <edd@debian.org>

	* R/pfLineartBS.R: Adjust naming of the two helper functions
	* man/pfLineartBS.Rd: Idem

2012-03-18  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* src/pfEx.cpp renamed to pflineartbs.cpp
	* inst/include/pffuncs.h renamed to pflineartbs.h
	* R/pfEx.R renamed to pfLineartBS.R
	* man/pfEx.Rd renamed to pfLineartBS.Rd

	* R/bspfGaussianOptimal.R tweaked & standardised plotting.
	* R/pfNonlinBS.R fixed plotting bug.

	* deprecated/ moved all rareEvents files here.

2012-03-17  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* man/pfEx.Rd updated to reflect previous changes.

	* NAMESPACE removed rareEvents
	* src/rareEvents.cpp moved to src/rareEvents.
	* src/simfunctions.cpp idem.
	* inst/include/simfunctions.h moved to inst/include/rareEvents.
	* inst/include/markovchains idem
	* man/rareEventsEx.Rd moved to man/rareEvents.
	* R/rareEventsEx.R moved to R/rareEvents.

2012-03-16  Dirk Eddelbuettel  <edd@dexter>

	* src/pf.cpp:
	  - Changed to get example data from R and pass to vector of cv_obs
	  - Added optional plotting callback to visualize estimation progress
	* R/pfEx.R:
	  - Added a helper func. to read data, restructured pfEx()
	  - Support optional plotting callback; provided sample function
	* man/pfEx.Rd: Updated accordingly

2012-03-16  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* NAMESPACE: Added pfNonlinBS.
	* src/pfnonlinbS.cpp: Bootstrap particle nonlinear particle filter
	example.
	* inst/include/pfnonlinbs.h: Header for the same.
	* R/pfNonlinBS.R: Minimal wrapper and output for the same.
	* man/pfNonlinBS.Rd: Minimal documentation for the same.

2012-03-15  Dirk Eddelbuettel  <edd@debian.org>

	* src/pf.cpp: Another new/delete cleanup

2012-03-15  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* Standardized file extensions .h and .cpp
	* src/blockpfgaussianoptfuncs.cpp merged into
	src/blockpfgaussianopt.cpp.
	* src/pffuncs.cpp merged into src/pf.cpp.

2012-03-13  Dirk Eddelbuettel  <edd@debian.org>

	* src/blockpfgaussianoptfuncs.cc: minor new/delete fix

2012-03-13  Adam Johansen <a.m.johansen@warwick.ac.uk>

	* NAMESPACE: Added blockpfGaussianOpt.
	* inst/include/blockpfguassianopt.hh: Declarations for univariate
	block-sampling particle filter implementation.
	* src/blockpfguassianopt.cc: Main file for univariate block-sampling
	particle filter implementation.
	* src/blockpfguassianoptfuncs.cc: Internal functions for same.
	* R/blockpfguassianopt.R: Minimal wrapper and output plotting for
	same.
	* doc/blockpfguassianopt.Rd: Added minimal documentation.

2012-01-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION: Version 0.0.2

	* inst/include/rngR.h: New implementation of the RNG class, relying
	solely on R thus removing the need to build against the GSL

	* inst/include/rng.hh: #ifdef'ed out as GNU GSL RNGs no longer used
	* src/rng.cc: Idem
	* src/simfunctions.cc: Idem; and two calls changed from GSL to R

	* inst/include/sampler.hh: Comment out ctor with GSL RNG type
	* inst/include/smctc.hh: Include new rngR.h instead of rng.hh
	* src/pffuncs.cc: Idem

	* src/Makevars: Remove GSL vars for compilation

2012-01-15  Dirk Eddelbuettel  <edd@debian.org>

	* src/rareEventsEx.cpp: Adapted main() from rare-events/main.cc in
	the SMCTC sources
	* src/simfunctions.hh: Also imported from rare-events/, and renamed
	fInitialize to fInitializMC as the library already fInitialize
	* src/simfunctions.hh: Dito
	* src/markovchains/markovchain.h: Also imported from rare-events/
	* R/rareEvents.R: Added minimal wrapper function
	* man/rareEvents.Rd: Added minimal manual page

2012-01-11  Dirk Eddelbuettel  <edd@debian.org>

	* Initial commit to R-Forge; package is still very bare but at least
	passes R CMD check now that it has a man page too

2012-01-07  Dirk Eddelbuettel  <edd@debian.org>

	* Bare-bones wrapping of Adam Johansen's nice SMCTC library described
	in his 2009 paper in the Journal of Statistical Software paper
